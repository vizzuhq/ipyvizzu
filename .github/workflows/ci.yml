name: CI

on:
    workflow_call:

jobs:
    check_src:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu22_${{ hashFiles('pdm.lock') }}

            - name: Set up Corepack
              run: |
                  corepack enable

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'
                  cache-dependency-path: 'yarn.lock'

            - name: Set up yarn
              run: |
                  yarn --immutable

            - name: Format
              run: |
                  source .venv/bin/activate
                  pdm run format-src

            - name: Lint
              run: |
                  source .venv/bin/activate
                  pdm run lint-src

            - name: Type
              run: |
                  source .venv/bin/activate
                  pdm run type-src

    check_docs:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu22_${{ hashFiles('pdm.lock') }}

            - name: Set up Corepack
              run: |
                  corepack enable

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'
                  cache-dependency-path: 'yarn.lock'

            - name: Set up yarn
              run: |
                  yarn --immutable

            - name: Format
              run: |
                  source .venv/bin/activate
                  pdm run format-docs

            - name: Lint
              run: |
                  source .venv/bin/activate
                  pdm run lint-docs

    check_tools:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu22_${{ hashFiles('pdm.lock') }}

            - name: Set up Corepack
              run: |
                  corepack enable

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'
                  cache-dependency-path: 'yarn.lock'

            - name: Set up yarn
              run: |
                  yarn --immutable

            - name: Deploy package
              run: |
                  source .venv/bin/activate
                  pdm run deploy

            - name: Format
              run: |
                  source .venv/bin/activate
                  pdm run format-tools

            - name: Lint
              run: |
                  source .venv/bin/activate
                  pdm run lint-tools

            - name: Type
              run: |
                  source .venv/bin/activate
                  pdm run type-tools

    test_ubuntu22:
        runs-on: ubuntu-22.04
        strategy:
            matrix:
                python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu22_${{ hashFiles('pdm.lock') }}

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Test
              run: |
                  source .venv/bin/activate
                  case "${{ matrix.python-version }}" in
                    "3.7") python_test_env="py37";;
                    "3.8") python_test_env="py38";;
                    "3.9") python_test_env="py39";;
                    "3.10") python_test_env="py310";;
                    "3.11") python_test_env="py311";;
                  esac
                  pdm run test -e "${python_test_env}"

            - name: Cache coverage ${{ matrix.python-version }}
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.${{ matrix.python-version }}
                  key: cache_coverage_${{ matrix.python-version }}_${{ github.run_id }}

    test_ubuntu20:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                python-version: ['3.6']

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu20_${{ hashFiles('pdm.lock') }}

            - name: Cache package
              uses: actions/cache@v3
              with:
                  path: dist/
                  key: cache_package_${{ github.run_id }}

            - name: Set up Python 3.6
              uses: actions/setup-python@v4
              with:
                  python-version: '3.6'

            - name: Test
              run: |
                  source .venv/bin/activate
                  tox -e py36 --installpkg dist/*.whl

            - name: Cache coverage ${{ matrix.python-version }}
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.${{ matrix.python-version }}
                  key: cache_coverage_${{ matrix.python-version }}_${{ github.run_id }}

    test_coverage:
        runs-on: ubuntu-22.04
        needs: [test_ubuntu20, test_ubuntu22]

        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 1

            - name: Cache venv
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: cache_dev_py_ubuntu22_${{ hashFiles('pdm.lock') }}

            - name: Cache coverage 3.6
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.6
                  key: cache_coverage_3.6_${{ github.run_id }}

            - name: Cache coverage 3.7
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.7
                  key: cache_coverage_3.7_${{ github.run_id }}

            - name: Cache coverage 3.8
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.8
                  key: cache_coverage_3.8_${{ github.run_id }}

            - name: Cache coverage 3.9
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.9
                  key: cache_coverage_3.9_${{ github.run_id }}

            - name: Cache coverage 3.10
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.10
                  key: cache_coverage_3.10_${{ github.run_id }}

            - name: Cache coverage 3.11
              uses: actions/cache@v3
              with:
                  path: .coverage/env/.coverage.3.11
                  key: cache_coverage_3.11_${{ github.run_id }}

            - name: Report coverage
              run: |
                  source .venv/bin/activate
                  tox -e coverage

            - name: Cache coverage
              uses: actions/cache@v3
              with:
                  path: .coverage/html
                  key: cache_coverage_${{ github.run_id }}
